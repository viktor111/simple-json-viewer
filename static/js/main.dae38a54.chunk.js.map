{"version":3,"sources":["components/Options.js","components/JsonInput.js","components/OutputJson.js","App.js","reportWebVitals.js","index.js"],"names":["Options","props","IOSSwitch","withStyles","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","Switch","focusVisibleClassName","disableRipple","Paper","style","elevation","Grid","container","item","xs","lg","Typography","id","gutterBottom","Slider","onChange","optionInput","aria-labelledby","valueLabelDisplay","defaultValue","step","min","marks","max","FormControlLabel","control","showDataTypes","toggleCheckedDataTypes","label","showElementCount","toggleElementCount","InputLabel","Select","labelId","value","themeChange","themeHanlder","MenuItem","JsonInput","onSubmit","inputHandler","TextField","multiline","rowsMax","changeHandler","variant","fullWidth","Button","type","spaces","OutputJson","json","maxHeight","overflow","displayObjectSize","displayDataTypes","indentWidth","parseInt","src","App","useState","jsonFromInput","setJsonFromInput","currentJsonFromInput","setCurrentJsonFromInput","currentSpaceOption","setCurrentSapceOption","dataTypes","setDataTypes","elementCount","setElementCount","setTheme","processJson","IconButton","rel","target","href","Divider","event","preventDefault","jsonParsed","JSON","parse","console","log","inputVale","newValue","prev","themeValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dae38a54.chunk.js","sourcesContent":["import {\r\n  Paper,\r\n  Slider,\r\n  Typography,\r\n  Grid,\r\n  Switch,\r\n  FormControlLabel,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst Options = (props) => {\r\n    const IOSSwitch = withStyles((theme) => ({\r\n        root: {\r\n          width: 42,\r\n          height: 26,\r\n          padding: 5,\r\n          margin: theme.spacing(1),\r\n        },\r\n        switchBase: {\r\n          padding: 1,\r\n          '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n              backgroundColor: '#52d869',\r\n              opacity: 1,\r\n              border: 'none',\r\n            },\r\n          },\r\n          '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n          },\r\n        },\r\n        thumb: {\r\n          width: 24,\r\n          height: 24,\r\n        },\r\n        track: {\r\n          borderRadius: 26 / 2,\r\n          border: `1px solid ${theme.palette.grey[400]}`,\r\n          backgroundColor: theme.palette.grey[50],\r\n          opacity: 1,\r\n          transition: theme.transitions.create(['background-color', 'border']),\r\n        },\r\n        checked: {},\r\n        focusVisible: {},\r\n      }))(({ classes, ...props }) => {\r\n        return (\r\n          <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n              root: classes.root,\r\n              switchBase: classes.switchBase,\r\n              thumb: classes.thumb,\r\n              track: classes.track,\r\n              checked: classes.checked,\r\n            }}\r\n            {...props}\r\n          />\r\n        );\r\n      });\r\n      \r\n\r\n\r\n  return (\r\n    <Paper style={{ padding: 30, margin: 10 }} elevation={3}>\r\n      <Grid container>\r\n        <Grid item xs={12} lg={12}>\r\n          <Typography id=\"discrete-slider\" gutterBottom>\r\n            Tab Spaces\r\n          </Typography>\r\n          <Slider\r\n            onChange={props.optionInput}\r\n            aria-labelledby=\"discrete-slider\"\r\n            valueLabelDisplay=\"auto\"\r\n            defaultValue={4}\r\n            step={2}\r\n            min={0}\r\n            marks\r\n            max={12}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} lg={6}>\r\n          <FormControlLabel\r\n            control={\r\n              <IOSSwitch\r\n                checked={props.showDataTypes}\r\n                onChange={props.toggleCheckedDataTypes}\r\n              />\r\n            }\r\n            label=\"Show data types\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} lg={6}>\r\n          <FormControlLabel\r\n            control={\r\n              <IOSSwitch\r\n                checked={props.showElementCount}\r\n                onChange={props.toggleElementCount}\r\n              />\r\n            }\r\n            label=\"Show element count\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} lg={12}>\r\n        <InputLabel id=\"demo-simple-select-label\">Theme</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={props.themeChange}\r\n          onChange={props.themeHanlder}\r\n        >\r\n          <MenuItem value={\"rjv-default\"}>Default</MenuItem>\r\n          <MenuItem value={\"ocean\"}>Ocean</MenuItem>\r\n          <MenuItem value={\"solarized\"}>Solarized</MenuItem>\r\n          <MenuItem value={\"apathy\"}>Apathy</MenuItem>\r\n          <MenuItem value={\"isotope\"}>High Contrat</MenuItem>\r\n        </Select>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import { Paper, Button, TextField } from \"@material-ui/core\";\r\nimport Options from \"./Options\";\r\n\r\nconst JsonInput = (props) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={props.inputHandler}>\r\n        <Paper style={{ padding: 30, margin: 10 }} elevation={3}>\r\n          <TextField\r\n            multiline\r\n            rowsMax={20}\r\n            onChange={props.changeHandler}\r\n            label=\"JSON\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n          />\r\n          <Button type=\"input\">View</Button>\r\n        </Paper>\r\n      </form>\r\n      \r\n      <Options\r\n        style={{\"text-align\":\"center\"}}\r\n        toggleCheckedDataTypes={props.toggleCheckedDataTypes}\r\n        toggleElementCount={props.toggleElementCount}\r\n        spaces={props.spaces}\r\n        optionInput={props.optionInput}\r\n        showDataTypes={props.showDataTypes}\r\n        showElementCount={props.showElementCount}\r\n        themeChange={props.theme}\r\n        themeHanlder={props.themeHanlder}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JsonInput;\r\n","import ReactJson from 'react-json-view';\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\n\r\nconst OutputJson = (props) => {\r\n\r\n    const renderJson= () => {\r\n\r\n        if(props.json === \"\") return(\r\n            <Paper elevation={3} style={{ height:840, margin: 10, maxHeight: 840, overflow: 'auto'}}>\r\n                \r\n            </Paper>\r\n        )\r\n\r\n        return(\r\n            <Paper elevation={3} style={{ height:840, margin: 10, maxHeight: 840, overflow: 'auto'}}>\r\n                <ReactJson theme={props.theme} displayObjectSize={props.showElementCount} displayDataTypes={props.showDataTypes} indentWidth={parseInt(props.spaces)} src={props.json}/>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n  return (\r\n    <>\r\n        {renderJson()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OutputJson;\r\n","import \"./App.css\";\nimport JsonInput from \"./components/JsonInput\";\nimport OutputJson from \"./components/OutputJson\";\nimport { useState } from \"react\";\nimport { Grid, Typography, Divider, IconButton } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nconst App = () => {\n  const [jsonFromInput, setJsonFromInput] = useState(\"\");\n  const [currentJsonFromInput, setCurrentJsonFromInput] = useState(\"\");\n  const [currentSpaceOption, setCurrentSapceOption] = useState(4);\n  const [dataTypes, setDataTypes] = useState(false);\n  const [elementCount, setElementCount] = useState(false);\n  const [theme, setTheme] = useState(\"rjv-default\");\n\n  const onInputHandler = (event) => {\n    event.preventDefault();\n\n    let jsonParsed = JSON.parse(currentJsonFromInput);\n\n    setJsonFromInput(jsonParsed);\n\n    console.log(currentSpaceOption);\n  };\n\n  const processJson = (json, spaces) => {\n    setJsonFromInput();\n  };\n\n  const onChangeHandler = (event) => {\n    const inputVale = event.target.value;\n\n    setCurrentJsonFromInput(inputVale);\n\n    console.log(inputVale);\n  };\n\n  const onOptionInputHandler = (event, newValue) => {\n    setCurrentSapceOption(newValue);\n  };\n\n  const onDataTypesChecked = () => {\n    setDataTypes((prev) => !prev);\n  };\n\n  const onElementCountChecked = () => {\n    setElementCount((prev) => !prev);\n  };\n\n  const themeHanlder = (event) => {\n    const themeValue = event.target.value;\n    console.log(\"rerqw\");\n    setTheme(themeValue);\n  };\n\n  return (\n    <>\n      <Grid container spacing={30}>\n        <Grid item xs={6} lg={11}>\n          <Typography style={{ \"text-align\": \"center\" }} variant=\"h4\">\n            Simple JSON Viewer\n          </Typography>\n        </Grid>\n        <Grid item xs={6} lg={1}>\n          <IconButton\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href=\"https://github.com/viktor111\"\n          >\n            <GitHubIcon />\n          </IconButton>\n        </Grid>\n        <Grid item xs={12} lg={12}>\n          <Divider />\n        </Grid>\n      </Grid>\n      <Grid container spacing={10}>\n        <Grid item xs={12} lg={6}>\n          <JsonInput\n            inputHandler={onInputHandler}\n            changeHandler={onChangeHandler}\n            processJson={processJson}\n            optionInput={onOptionInputHandler}\n            spaces={currentSpaceOption}\n            toggleCheckedDataTypes={onDataTypesChecked}\n            toggleElementCount={onElementCountChecked}\n            showDataTypes={dataTypes}\n            showElementCount={elementCount}\n            theme={theme}\n            themeHanlder={themeHanlder}\n          />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <OutputJson\n            json={jsonFromInput}\n            spaces={currentSpaceOption}\n            processJson={processJson}\n            showDataTypes={dataTypes}\n            showElementCount={elementCount}\n            theme={theme}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}